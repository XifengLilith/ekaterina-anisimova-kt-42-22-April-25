// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ekaterina_anisimova_kt_42_22_April_25.Database;

#nullable disable

namespace ekaterina_anisimova_kt_42_22_April_25.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    partial class TeacherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_academic_degree_name")
                        .HasComment("Название ученой степени");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_cd_academic_degree_academic_degree_id");

                    b.ToTable("cd_academic_degree", (string)null);
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("department_id")
                        .HasComment("Идентификатор кафедры");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<DateTime>("FoundationDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("d_foundation_date")
                        .HasComment("Дата основания кафедры");

                    b.Property<int?>("HeadOfDepartmentId")
                        .IsRequired()
                        .HasColumnType("int4")
                        .HasColumnName("f_head_of_department_id")
                        .HasComment("Идентификатор заведующего кафедрой");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("c_department_name")
                        .HasComment("Название кафедры");

                    b.HasKey("DepartmentId")
                        .HasName("pk_cd_department_department_id");

                    b.HasIndex("HeadOfDepartmentId")
                        .IsUnique();

                    b.HasIndex(new[] { "HeadOfDepartmentId" }, "idx_cd_department_fk_f_head_of_department_id");

                    b.ToTable("cd_department", (string)null);
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("c_discipline_name")
                        .HasComment("Название дисциплины");

                    b.HasKey("DisciplineId")
                        .HasName("pk_cd_discipline_discipline_id");

                    b.ToTable("cd_discipline", (string)null);
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Load", b =>
                {
                    b.Property<int>("LoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("load_id")
                        .HasComment("Идентификатор нагрузки");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoadId"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int4")
                        .HasColumnName("f_discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    b.Property<int>("Hours")
                        .HasColumnType("int4")
                        .HasColumnName("n_hours")
                        .HasComment("Количество часов нагрузки");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int4")
                        .HasColumnName("f_teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    b.HasKey("LoadId")
                        .HasName("pk_cd_load_load_id");

                    b.HasIndex(new[] { "DisciplineId" }, "idx_cd_load_fk_f_discipline_id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_cd_load_fk_f_teacher_id");

                    b.ToTable("cd_load", (string)null);
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор должности");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_position_name")
                        .HasComment("Название должности");

                    b.HasKey("PositionId")
                        .HasName("pk_cd_position_position_id");

                    b.ToTable("cd_position", (string)null);
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeacherId"));

                    b.Property<int>("AcademicDegreeId")
                        .HasColumnType("int4")
                        .HasColumnName("f_academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int4")
                        .HasColumnName("f_department_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_firstname")
                        .HasComment("Имя преподавателя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_lastname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_middlename")
                        .HasComment("Отчество преподавателя");

                    b.Property<int>("PositionId")
                        .HasColumnType("int4")
                        .HasColumnName("f_position_id")
                        .HasComment("Идентификатор должности");

                    b.HasKey("TeacherId")
                        .HasName("pk_cd_teacher_teacher_id");

                    b.HasIndex(new[] { "AcademicDegreeId" }, "idx_cd_teacher_fk_f_academic_degree_id");

                    b.HasIndex(new[] { "DepartmentId" }, "idx_cd_teacher_fk_f_department_id");

                    b.HasIndex(new[] { "PositionId" }, "idx_cd_teacher_fk_f_position_id");

                    b.ToTable("cd_teacher", (string)null);
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Department", b =>
                {
                    b.HasOne("ekaterina_anisimova_kt_42_22_April_25.Models.Teacher", "HeadOfDepartment")
                        .WithOne()
                        .HasForeignKey("ekaterina_anisimova_kt_42_22_April_25.Models.Department", "HeadOfDepartmentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("fk_f_head_of_department_id");

                    b.Navigation("HeadOfDepartment");
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Load", b =>
                {
                    b.HasOne("ekaterina_anisimova_kt_42_22_April_25.Models.Discipline", "Discipline")
                        .WithMany("Loads")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("ekaterina_anisimova_kt_42_22_April_25.Models.Teacher", "Teacher")
                        .WithMany("Loads")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_teacher_id");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Teacher", b =>
                {
                    b.HasOne("ekaterina_anisimova_kt_42_22_April_25.Models.AcademicDegree", "AcademicDegree")
                        .WithMany("Teachers")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_f_academic_degree_id");

                    b.HasOne("ekaterina_anisimova_kt_42_22_April_25.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_department_id");

                    b.HasOne("ekaterina_anisimova_kt_42_22_April_25.Models.Position", "Position")
                        .WithMany("Teachers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_f_position_id");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.AcademicDegree", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Department", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Discipline", b =>
                {
                    b.Navigation("Loads");
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Position", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("ekaterina_anisimova_kt_42_22_April_25.Models.Teacher", b =>
                {
                    b.Navigation("Loads");
                });
#pragma warning restore 612, 618
        }
    }
}
